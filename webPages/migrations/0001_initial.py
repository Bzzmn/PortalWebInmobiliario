# Generated by Django 5.0.4 on 2025-02-13 21:02

import django.db.models.deletion
import webPages.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Comuna",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre de la comuna",
                        max_length=100,
                        verbose_name="Nombre",
                    ),
                ),
            ],
            options={
                "verbose_name": "comuna",
                "verbose_name_plural": "comunas",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre de la región",
                        max_length=100,
                        unique=True,
                        verbose_name="Nombre",
                    ),
                ),
            ],
            options={
                "verbose_name": "región",
                "verbose_name_plural": "regiones",
            },
        ),
        migrations.CreateModel(
            name="TipoDeInmueble",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del tipo de inmueble",
                        max_length=100,
                        unique=True,
                        verbose_name="Nombre",
                    ),
                ),
            ],
            options={
                "verbose_name": "tipo de inmueble",
                "verbose_name_plural": "tipos de inmueble",
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Dirección de correo electrónico del usuario",
                        max_length=254,
                        unique=True,
                        verbose_name="Correo electrónico",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del usuario",
                        max_length=50,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "apellido",
                    models.CharField(
                        help_text="Apellido del usuario",
                        max_length=50,
                        verbose_name="Apellido",
                    ),
                ),
                (
                    "rut",
                    models.CharField(
                        help_text="RUT del usuario (formato: 12345678-9)",
                        max_length=9,
                        primary_key=True,
                        serialize=False,
                        verbose_name="RUT",
                    ),
                ),
                (
                    "es_arrendador",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si el usuario es un arrendador",
                        verbose_name="Es arrendador",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Los grupos a los que pertenece este usuario. Un usuario obtendrá todos los permisos otorgados a cada uno de sus grupos.",
                        related_name="usuario_set",
                        related_query_name="usuario",
                        to="auth.group",
                        verbose_name="grupos",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Permisos específicos para este usuario.",
                        related_name="usuario_set",
                        related_query_name="usuario",
                        to="auth.permission",
                        verbose_name="permisos de usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "usuario",
                "verbose_name_plural": "usuarios",
            },
            managers=[
                ("objects", webPages.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Arrendador",
            fields=[],
            options={
                "verbose_name": "arrendador",
                "verbose_name_plural": "arrendadores",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("webPages.usuario",),
            managers=[
                ("objects", webPages.models.ArrendadorManager()),
            ],
        ),
        migrations.CreateModel(
            name="Arrendatario",
            fields=[],
            options={
                "verbose_name": "arrendatario",
                "verbose_name_plural": "arrendatarios",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("webPages.usuario",),
            managers=[
                ("objects", webPages.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Datos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        default="",
                        help_text="Dirección del usuario",
                        max_length=100,
                        verbose_name="Dirección",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        help_text="Número de teléfono del usuario",
                        max_length=15,
                        verbose_name="Teléfono",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Correo electrónico de contacto",
                        max_length=254,
                        verbose_name="Correo electrónico",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        help_text="Usuario asociado a estos datos",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="datos",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "datos de usuario",
                "verbose_name_plural": "datos de usuarios",
            },
        ),
        migrations.CreateModel(
            name="Inmueble",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre o título del inmueble",
                        max_length=50,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "imagen_url",
                    models.URLField(
                        default="https://via.placeholder.com/300x200.png?text=No+Image",
                        help_text="URL de la imagen principal del inmueble en S3",
                        max_length=1000,
                        verbose_name="URL de la imagen",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        help_text="Dirección del inmueble",
                        max_length=100,
                        verbose_name="Dirección",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        help_text="Descripción detallada del inmueble",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "superficie_construida",
                    models.FloatField(
                        help_text="Superficie construida en metros cuadrados",
                        verbose_name="Superficie construida",
                    ),
                ),
                (
                    "superficie_total",
                    models.FloatField(
                        help_text="Superficie total del terreno en metros cuadrados",
                        verbose_name="Superficie total",
                    ),
                ),
                (
                    "cantidad_estacionamientos",
                    models.IntegerField(
                        default=1,
                        help_text="Número de estacionamientos disponibles",
                        verbose_name="Cantidad de estacionamientos",
                    ),
                ),
                (
                    "cantidad_habitaciones",
                    models.IntegerField(
                        default=1,
                        help_text="Número de habitaciones",
                        verbose_name="Cantidad de habitaciones",
                    ),
                ),
                (
                    "cantidad_banos",
                    models.IntegerField(
                        default=1,
                        help_text="Número de baños",
                        verbose_name="Cantidad de baños",
                    ),
                ),
                (
                    "precio_arriendo",
                    models.IntegerField(
                        help_text="Precio mensual de arriendo",
                        verbose_name="Precio de arriendo",
                    ),
                ),
                (
                    "disponible",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el inmueble está disponible para arrendar",
                        verbose_name="Disponible",
                    ),
                ),
                (
                    "fecha_publicacion",
                    models.DateField(
                        auto_now_add=True,
                        help_text="Fecha en que se publicó el inmueble",
                        verbose_name="Fecha de publicación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateField(
                        auto_now=True,
                        help_text="Fecha de la última actualización",
                        verbose_name="Fecha de actualización",
                    ),
                ),
                (
                    "arrendador",
                    models.ForeignKey(
                        help_text="Usuario arrendador que publica el inmueble",
                        limit_choices_to={"es_arrendador": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inmuebles",
                        to=settings.AUTH_USER_MODEL,
                        to_field="email",
                        verbose_name="Arrendador",
                    ),
                ),
                (
                    "comuna",
                    models.ForeignKey(
                        help_text="Comuna donde se ubica el inmueble",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inmuebles",
                        to="webPages.comuna",
                        verbose_name="Comuna",
                    ),
                ),
                (
                    "tipo_de_inmueble",
                    models.ForeignKey(
                        help_text="Tipo de inmueble (casa, departamento, etc.)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inmuebles",
                        to="webPages.tipodeinmueble",
                        to_field="nombre",
                        verbose_name="Tipo de inmueble",
                    ),
                ),
            ],
            options={
                "verbose_name": "inmueble",
                "verbose_name_plural": "inmuebles",
            },
        ),
        migrations.AddField(
            model_name="comuna",
            name="region",
            field=models.ForeignKey(
                help_text="Región a la que pertenece la comuna",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comunas",
                to="webPages.region",
                verbose_name="Región",
            ),
        ),
        migrations.CreateModel(
            name="Solicitud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("aceptada", "Aceptada"),
                            ("rechazada", "Rechazada"),
                        ],
                        default="pendiente",
                        help_text="Estado actual de la solicitud",
                        max_length=10,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "mensaje",
                    models.TextField(
                        default="Hola, me gusta su propiedad, me gustaría arrendarla.",
                        help_text="Mensaje del arrendatario al arrendador",
                        verbose_name="Mensaje",
                    ),
                ),
                (
                    "fecha_solicitud",
                    models.DateField(
                        auto_now_add=True,
                        help_text="Fecha en que se realizó la solicitud",
                        verbose_name="Fecha de solicitud",
                    ),
                ),
                (
                    "fecha_aceptacion",
                    models.DateField(
                        help_text="Fecha en que se aceptó la solicitud",
                        null=True,
                        verbose_name="Fecha de aceptación",
                    ),
                ),
                (
                    "fecha_rechazo",
                    models.DateField(
                        help_text="Fecha en que se rechazó la solicitud",
                        null=True,
                        verbose_name="Fecha de rechazo",
                    ),
                ),
                (
                    "inmueble",
                    models.ForeignKey(
                        help_text="Inmueble asociado a esta solicitud",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes",
                        to="webPages.inmueble",
                        verbose_name="Inmueble",
                    ),
                ),
                (
                    "arrendatario",
                    models.ForeignKey(
                        help_text="Arrendatario que realiza la solicitud",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes",
                        to="webPages.arrendatario",
                        verbose_name="Arrendatario",
                    ),
                ),
            ],
            options={
                "verbose_name": "solicitud",
                "verbose_name_plural": "solicitudes",
            },
        ),
        migrations.AddConstraint(
            model_name="comuna",
            constraint=models.UniqueConstraint(
                fields=("nombre", "region"), name="unique_nombre_region"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="comuna",
            unique_together={("nombre", "region")},
        ),
    ]
